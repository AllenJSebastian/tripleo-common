---

  - name: check if amphora image file exists
    stat:
      path: "{{ amp_image_filename }}"
    register: amp_image_file_result
  - name: upload image to glance
    shell: |
      if [[ $(openstack image show {{ amp_image_name }} > /dev/null; echo $?) -eq 1 ]]; then
        glance image-create --name {{ amp_image_name }} --disk-format qcow2 \
        --container-format bare --tags {{ amp_image_tag }} --file {{ amp_image_filename }}
      fi
    register: image_result
    changed_when: "image_result.stdout != ''"
    when: amp_image_file_result.stat.exists == True

  - name: use ssh pub key file if provided and is readable
    block:
      - name: check if pub key file exists
        stat: path="{{ amp_ssh_key_path }}"
        register: key_file_result
        ignore_errors: true

      - name: fail if ssh pub key file does not exist or is not readable
        fail: msg="{{ amp_ssh_key_path }} does not exist or is not readable by user {{ ansible_user }}"
        when: key_file_result|failed or key_file_result.stat.exists == False or key_file_result.stat.readable == False

      - set_fact:
          amp_ssh_key_path_final: "{{ amp_ssh_key_path }}"
    when: amp_ssh_key_path is defined and amp_ssh_key_path != ""

  - name: defaulting to public key from undercloud default keypair
    block:
      - name: create temp pub key file
        tempfile: state=file
        register: ssh_key_tmp_file

      - name: copy ssh public key content to temp file
        copy: content="{{ amp_ssh_key_data }}" dest="{{ ssh_key_tmp_file.path }}"

      - set_fact:
          amp_ssh_key_path_final: "{{ ssh_key_tmp_file.path }}"
    when: amp_ssh_key_path is not defined or amp_ssh_key_path == ""

  - name: upload pub key to overcloud
    shell: |
      openstack keypair show {{ amp_ssh_key_name }} || \
        openstack keypair create --public-key {{ amp_ssh_key_path_final }} {{ amp_ssh_key_name }}
    environment:
      OS_USERNAME: "{{ auth_username }}"
      OS_PASSWORD: "{{ auth_password }}"
      OS_PROJECT_NAME: "{{ auth_project_name }}"
